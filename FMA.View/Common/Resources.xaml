<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:view="clr-namespace:FMA.View"
                    xmlns:common="clr-namespace:FMA.View.Common">

    <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter" />
    <SolidColorBrush x:Key="ErrorColor" Color="Red" />

    <Style x:Key="TextBoxWithValidation" TargetType="{x:Type TextBox}">

        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="Padding" Value="2,1,1,1" />
        <Setter Property="AllowDrop" Value="true" />
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="ScrollViewer.PanningMode" Value="VerticalFirst" />
        <Setter Property="Stylus.IsFlicksEnabled" Value="False" />
        <Setter Property="SelectionBrush" Value="{DynamicResource TextBoxFocused}" />
        <Setter Property="Margin" Value="4,4,16,4" />
        <Setter Property="VerticalAlignment" Value="Stretch" />
        <Setter Property="Validation.ErrorTemplate">
            <Setter.Value>
                <ControlTemplate>
                    <DockPanel>
                        <Border x:Name="Bd"
                                Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                Padding="{TemplateBinding Padding}"
                                SnapsToDevicePixels="true">
                            <AdornedElementPlaceholder x:Name="ErrorAdorner">
                                <Border BorderBrush="{StaticResource ErrorColor}" BorderThickness="2" />
                            </AdornedElementPlaceholder>
                        </Border>
                        <Grid ToolTip="{Binding AdornedElement.(Validation.Errors)[0].ErrorContent, ElementName=ErrorAdorner}">
                            <Rectangle Width="16"
                                       Margin="0,0,0,0"
                                       Fill="{StaticResource ErrorColor}" />
                            <TextBlock Width="16"
                                       Height="22"
                                       VerticalAlignment="Center"
                                       FontSize="16"
                                       FontWeight="Bold"
                                       Foreground="White"
                                       Text="!"
                                       TextAlignment="Center" />
                        </Grid>
                    </DockPanel>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

        <Style.Triggers>
            <Trigger Property="Validation.HasError" Value="True">
                <Setter Property="ToolTip">
                    <Setter.Value>
                        <Binding Path="(Validation.Errors).CurrentItem.ErrorContent" RelativeSource="{x:Static RelativeSource.Self}" />
                    </Setter.Value>
                </Setter>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Storyboard x:Key="FadeIn">
        <DoubleAnimation Duration="0:0:0.2"
                         Storyboard.TargetProperty="Opacity"
                         To="1" />
        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility">
            <DiscreteObjectKeyFrame KeyTime="0:0:0.0" Value="{x:Static Visibility.Visible}" />
        </ObjectAnimationUsingKeyFrames>
    </Storyboard>

    <Storyboard x:Key="FadeOut">

        <DoubleAnimation Duration="0:0:0.0"
                         Storyboard.TargetProperty="Opacity"
                         To="0" />
        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility">
            <DiscreteObjectKeyFrame KeyTime="0:0:0.0" Value="{x:Static Visibility.Collapsed}" />
        </ObjectAnimationUsingKeyFrames>
    </Storyboard>

    <Style TargetType="TextBlock">
        <Style.Setters>
            <Setter Property="Margin" Value="4" />
            <Setter Property="VerticalAlignment" Value="Center" />
        </Style.Setters>
    </Style>
    <Style TargetType="TextBox">
        <Style.Setters>
            <Setter Property="Margin" Value="4" />
        </Style.Setters>
    </Style>
    <Style TargetType="ToggleButton">
        <Style.Setters>
            <Setter Property="Margin" Value="4" />
            <Setter Property="VerticalAlignment" Value="Center" />
        </Style.Setters>
    </Style>
    <Style TargetType="Button">
        <Style.Setters>
            <Setter Property="Margin" Value="4" />
            <Setter Property="VerticalAlignment" Value="Center" />
        </Style.Setters>
    </Style>
    <Style TargetType="common:NumericUpDown">
        <Style.Setters>
            <Setter Property="Margin" Value="4,4,8,4" />
        </Style.Setters>
    </Style>

    <Style x:Key="ImageButton"
           BasedOn="{StaticResource {x:Type Button}}"
           TargetType="{x:Type Button}">
        <Setter Property="SnapsToDevicePixels" Value="true" />
        <Setter Property="Background" Value="Black" />
        <Setter Property="OverridesDefaultStyle" Value="true" />

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="Border"
                            Background="Transparent"
                            BorderBrush="Transparent"
                            BorderThickness="1"
                            CornerRadius="2">
                        <ContentPresenter Margin="2"
                                          HorizontalAlignment="Center"
                                          VerticalAlignment="Center"
                                          RecognizesAccessKey="True" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsKeyboardFocused" Value="true">
                            <!--<Setter TargetName="Border" Property="BorderBrush" Value="#202020" />-->
                        </Trigger>
                        <Trigger Property="IsDefaulted" Value="true">
                            <!--<Setter TargetName="Border" Property="BorderBrush" Value="#202020" />-->
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter TargetName="Border" Property="Background" Value="LightGray" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <!--<Setter TargetName="Border" Property="Background" Value="#E0E0E0" />-->
                            <!--<Setter TargetName="Border" Property="BorderBrush" Value="#606060" />-->
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter TargetName="Border" Property="Background" Value="#EEEEEE" />
                            <Setter TargetName="Border" Property="BorderBrush" Value="Red" />
                            <Setter Property="Foreground" Value="#888888" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ImageButtonCritical"
           BasedOn="{StaticResource ImageButton}"
           TargetType="Button">
        <Style.Setters>
            <Setter Property="Background" Value="Black" />
        </Style.Setters>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="Red" />
            </Trigger>
        </Style.Triggers>
    </Style>

</ResourceDictionary>